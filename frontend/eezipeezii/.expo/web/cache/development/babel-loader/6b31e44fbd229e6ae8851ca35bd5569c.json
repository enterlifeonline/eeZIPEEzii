{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/evert/eeZIPEEzii/frontend/eezipeezii/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { StackNavigator } from 'react-navigation';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-client-preset';\nimport { ApolloProvider } from 'react-apollo';\nimport { setContext } from 'apollo-link-context';\nimport Register from \"./src/pages/Register\";\nimport Login from \"./src/pages/Login\";\nimport Profile from \"./src/pages/Profile\";\nimport \"apollo-client\";\nimport \"apollo-link\";\nimport { signIn, signOut, getToken } from \"./src/util\";\nvar httpLink = new HttpLink({\n  uri: 'https://localhost:8000/graphql'\n});\nvar authLink = setContext(function _callee(req, _ref) {\n  var headers, token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          headers = _ref.headers;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getToken());\n\n        case 3:\n          token = _context.sent;\n          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, headers), {}, {\n            headers: {\n              authorization: token ? \"Bearer \" + token : null\n            }\n          }));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nvar link = authLink.concat(httpLink);\nvar client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n});\nvar AuthStack = StackNavigator({\n  Register: {\n    screen: Register,\n    navigationOptions: {\n      headerTitle: 'Register'\n    }\n  },\n  Login: {\n    screen: Login,\n    navigationOptions: {\n      headerTitle: 'Login'\n    }\n  }\n});\nvar LoggedInStack = StackNavigator({\n  Profile: {\n    screen: Profile,\n    navigationOptions: {\n      headerTitle: 'Profile'\n    }\n  }\n});\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.handleChangeLoginState = function () {\n      var loggedIn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var jwt = arguments.length > 1 ? arguments[1] : undefined;\n\n      _this.setState({\n        loggedIn: loggedIn\n      });\n\n      if (loggedIn) {\n        signIn(jwt);\n      } else {\n        signOut();\n      }\n    };\n\n    _this.state = {\n      loggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      var token;\n      return _regeneratorRuntime.async(function UNSAFE_componentWillMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getToken());\n\n            case 2:\n              token = _context2.sent;\n\n              if (token) {\n                this.setState({\n                  loggedIn: true\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ApolloProvider, {\n        client: client,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, this.state.loggedIn ? React.createElement(LoggedInStack, {\n        screenProps: {\n          changeLoginState: this.handleChangeLoginState\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }) : React.createElement(AuthStack, {\n        screenProps: {\n          changeLoginState: this.handleChangeLoginState\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/evert/eeZIPEEzii/frontend/eezipeezii/App.js"],"names":["React","Component","StackNavigator","ApolloClient","HttpLink","InMemoryCache","ApolloProvider","setContext","Register","Login","Profile","signIn","signOut","getToken","httpLink","uri","authLink","req","headers","token","authorization","link","concat","client","cache","AuthStack","screen","navigationOptions","headerTitle","LoggedInStack","App","props","handleChangeLoginState","loggedIn","jwt","setState","state","changeLoginState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StackNavigator } from 'react-navigation';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-client-preset';\nimport { ApolloProvider } from 'react-apollo';\nimport { setContext } from 'apollo-link-context';\n\nimport Register from './src/pages/Register';\nimport Login from './src/pages/Login';\nimport Profile from './src/pages/Profile';\n\nimport \"apollo-client\";\nimport \"apollo-link\";\n\nimport { signIn, signOut, getToken } from './src/util';\n\nconst httpLink = new HttpLink({ uri: 'https://localhost:8000/graphql' });\nconst authLink = setContext(async (req, { headers }) => {\n  const token = await getToken();\n\n  return {\n    ...headers,\n    headers: {\n      authorization: token ? `Bearer ${token}` : null,\n    },\n  };\n});\n\nconst link = authLink.concat(httpLink);\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n});\n\nconst AuthStack = StackNavigator({\n  Register: { screen: Register, navigationOptions: { headerTitle: 'Register' } },\n  Login: { screen: Login, navigationOptions: { headerTitle: 'Login' } },\n});\n\nconst LoggedInStack = StackNavigator({\n  Profile: { screen: Profile, navigationOptions: { headerTitle: 'Profile' } },\n});\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedIn: false,\n    };\n  }\n\n  async UNSAFE_componentWillMount() {\n    const token = await getToken();\n    if (token) {\n      this.setState({ loggedIn: true });\n    }\n  }\n\n  handleChangeLoginState = (loggedIn = false, jwt) => {\n    this.setState({ loggedIn });\n    if (loggedIn) {\n      signIn(jwt);\n    } else {\n      signOut();\n    }\n  };\n\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        {this.state.loggedIn ?\n          <LoggedInStack screenProps={{ changeLoginState: this.handleChangeLoginState }} /> :\n          <AuthStack screenProps={{ changeLoginState: this.handleChangeLoginState }} />}\n      </ApolloProvider>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}